"""Initial tables

Revision ID: 6f6f1eec6ff1
Revises: 
Create Date: 2025-06-22 23:39:52.979491

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6f6f1eec6ff1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('farm_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('farm_name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('farm_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('event_date', sa.String(length=20), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.String(length=200), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('recurrence', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goat_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=30), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('permissions', sa.String(length=500), nullable=True),
    sa.Column('must_change_password', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=10), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('vaccine_guide',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guide_text', sa.Text(), nullable=True),
    sa.Column('image_path', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vaccine_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('min_age_days', sa.Integer(), nullable=True),
    sa.Column('booster_schedule_days', sa.String(length=200), nullable=True),
    sa.Column('default_frequency_days', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('goat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(length=50), nullable=False),
    sa.Column('goat_type_id', sa.Integer(), nullable=False),
    sa.Column('sex', sa.String(length=10), nullable=True),
    sa.Column('is_pregnant', sa.Boolean(), nullable=True),
    sa.Column('dob', sa.String(length=20), nullable=True),
    sa.Column('date_acquired', sa.String(length=20), nullable=False),
    sa.Column('acquisition_method', sa.String(length=20), nullable=False),
    sa.Column('source_name', sa.String(length=50), nullable=True),
    sa.Column('purchase_price', sa.Float(), nullable=True),
    sa.Column('age_estimate_months', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('added_by', sa.String(length=50), nullable=True),
    sa.Column('location', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['goat_type_id'], ['goat_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tag')
    )
    op.create_table('password_reset_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('target_weight',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goat_type_id', sa.Integer(), nullable=False),
    sa.Column('sex', sa.String(length=10), nullable=True),
    sa.Column('age_months', sa.Integer(), nullable=False),
    sa.Column('min_weight', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['goat_type_id'], ['goat_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('breeding_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('buck_id', sa.Integer(), nullable=True),
    sa.Column('doe_id', sa.Integer(), nullable=True),
    sa.Column('mating_start_date', sa.String(length=20), nullable=True),
    sa.Column('mating_end_date', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.String(length=200), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['buck_id'], ['goat.id'], ),
    sa.ForeignKeyConstraint(['doe_id'], ['goat.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goat_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goat_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=300), nullable=False),
    sa.Column('submitted_by', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('image_path', sa.String(length=200), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['goat_id'], ['goat.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('removal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goat_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.String(length=20), nullable=True),
    sa.Column('reason', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('certificate_path', sa.String(length=200), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['goat_id'], ['goat.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sickness',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goat_id', sa.Integer(), nullable=True),
    sa.Column('sickness', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('medicine', sa.String(length=100), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('image_path', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['goat_id'], ['goat.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vaccination_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goat_id', sa.Integer(), nullable=True),
    sa.Column('vaccine_type_id', sa.Integer(), nullable=True),
    sa.Column('scheduled_date', sa.String(length=20), nullable=True),
    sa.Column('actual_date_given', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('batch_number', sa.String(length=50), nullable=True),
    sa.Column('given_by', sa.String(length=50), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['goat_id'], ['goat.id'], ),
    sa.ForeignKeyConstraint(['vaccine_type_id'], ['vaccine_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('goat_id', 'vaccine_type_id', 'scheduled_date', name='uix_1')
    )
    op.create_table('weight_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goat_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.String(length=20), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['goat_id'], ['goat.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goat_feedback_photo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feedback_id', sa.Integer(), nullable=True),
    sa.Column('image_path', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['feedback_id'], ['goat_feedback.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sickness_photo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sickness_id', sa.Integer(), nullable=True),
    sa.Column('image_path', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['sickness_id'], ['sickness.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sickness_photo')
    op.drop_table('goat_feedback_photo')
    op.drop_table('weight_log')
    op.drop_table('vaccination_event')
    op.drop_table('sickness')
    op.drop_table('removal')
    op.drop_table('goat_feedback')
    op.drop_table('breeding_event')
    op.drop_table('target_weight')
    op.drop_table('password_reset_request')
    op.drop_table('goat')
    op.drop_table('vaccine_type')
    op.drop_table('vaccine_guide')
    op.drop_table('user')
    op.drop_table('goat_type')
    op.drop_table('farm_event')
    op.drop_table('farm_config')
    # ### end Alembic commands ###
